# Generated by Django 5.2.1 on 2025-05-21 02:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QRCodeBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_type', models.CharField(help_text='Type of target (course, module, quiz)', max_length=50)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('enrolled', 'Enrolled Users Only'), ('instructor', 'Instructors Only'), ('admin', 'Admins Only')], default='public', max_length=20)),
                ('max_scans_per_code', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('codes_count', models.PositiveIntegerField(default=0, help_text='Number of codes in this batch')),
                ('scans_count', models.PositiveIntegerField(default=0, help_text='Number of times codes in this batch have been scanned')),
                ('metadata', models.JSONField(default=dict)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_qr_batches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QR Code Batch',
                'verbose_name_plural': 'QR Code Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('max_scans', models.PositiveIntegerField(blank=True, help_text='Maximum number of scans allowed, or blank for unlimited', null=True)),
                ('current_scans', models.PositiveIntegerField(default=0, help_text='Number of times this code has been scanned')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this QR code is active and can be scanned')),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('enrolled', 'Enrolled Users Only'), ('instructor', 'Instructors Only'), ('admin', 'Admins Only')], default='public', help_text='Access level required to scan this code', max_length=20)),
                ('payload', models.JSONField(default=dict, help_text='Additional data to include in the QR code')),
                ('image_data', models.TextField(blank=True, help_text='Base64 encoded QR code image data')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='codes', to='qr_codes.qrcodebatch')),
            ],
            options={
                'verbose_name': 'QR Code',
                'verbose_name_plural': 'QR Codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QRCodeScan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scanned_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('context_data', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('success', 'Success'), ('expired', 'Expired'), ('exceeded', 'Usage Exceeded'), ('invalid', 'Invalid'), ('unauthorized', 'Unauthorized')], default='success', max_length=20)),
                ('qr_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='qr_codes.qrcode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QR Code Scan',
                'verbose_name_plural': 'QR Code Scans',
                'ordering': ['-scanned_at'],
            },
        ),
    ]
